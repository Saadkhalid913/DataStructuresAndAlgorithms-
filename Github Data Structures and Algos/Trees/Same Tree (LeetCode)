'''
https://leetcode.com/problems/same-tree/submissions/

Runtime: 12 ms, faster than 95.66% of Python online submissions for Same Tree.
Memory Usage: 13.7 MB, less than 11.54% of Python online submissions for Same Tree.


'''

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def isSameTree(self, p, q):
        
        # if both trees are None they are equal  
        if p == None and q == None:
            return True
        
        # if the first condition is false and one of the trees is None, by 
        # definition, one tree is not equal to the other, we return False 
        elif p == None or q == None:
            return False 
        
        # if the values of both trees are defined and equal, we recursivly call
        # the function on the left and right children of the trees respectivly 
        elif p.val == q.val:
            return self.isSameTree(p.right, q.right) and self.isSameTree(p.left, q.left)
        
        # if the values are defined but not equal, there exists two unequal nodes in the
        # tree, we return False 
        else:
            return False 
        
    
        
